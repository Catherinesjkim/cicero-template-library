/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace org.accordproject.ucDavisStandardLicensingK

import org.accordproject.cicero.runtime.*
import org.accordproject.time.*

contract UCDavisStandardLicense over UCDavisStandardLicensingK {
  // Clause for royalty payments
  clause paymentClause(request : PaymentRequest) : PayOut emits PaymentObligation {
    emit PaymentObligation{
        contract: contract,
        promisor: some(contract.licensee),
        promisee: some(contract.licensor),
        deadline: none,
        amount: clause.amount, 
        description: contract.licesnee.partyId ++ " should pay contract amount to " ++ contract.licensor.partyId
      };
    return PayOut{ amount: clause.amount }
  }

  clause execute(request : PaymentRequest) : PayOut {
    let royaltiesAmount = request.netSaleRevenue * contract.roayltyRate / 100.00;
    let sublicensingAmount = request.sublicensingRevenue * contract.sublicensingRoyaltyRate / 100.00;
    let totalAmount = royaltiesAmount + sublicensingAmount;

    match request.permissionGrantedBy
    with let? grantedBy then
      return PayOut{
        totalAmount: totalAmount,
        dueBy: addDuration(grantedBy,contract.paymentPeriodWithPermission)
      }
    else
      return PayOut{
        totalAmount: totalAmount,
        dueBy: addDuration(endOf(now(), quarters), contract.paymentPeriod)
      }
  }
}